//properties needed to release a version of dynahist:
// * general:
//  - 'version' (version to release)
// * github:
//  - 'github_token' (token)
// * sonatype:
//  - 'ossrhUsername' (username)
//  - 'ossrhPassword' (password)
// * signing (gpg):
//  - 'signing.keyId' (last 8 digits of key)
//  - 'signing.password' (passphrase for keystore)
//  - 'signing.secretKeyRingFile' (keyring file)

//release task: 'gradlew --build-file release.gradle publishToSonatype \
//                      -Pversion="" \
//                      -PossrhUsername="" -PossrhPassword="" \
//                      -Pgithub_token=""\
//                      -Psigning.keyId="" -Psigning.password="" -Psigning.secretKeyRingFile=""'
// Automate closeAndRelease by calling the task 'closeAndReleaseSonatypeStagingRepository'

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'com.github.breadmoirai.github-release' version '2.2.12'
    id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
}

repositories {
    jcenter()
}

jar {
    manifest {
        attributes 'Specification-Title': 'DynaHist',
                'Specification-Vendor': 'Dynatrace LLC',
                'url': 'https://github.com/dynatrace-oss/dynahist'
    }
}

javadoc {
    title 'DynaHist ' + project.version + ' API'
}

assemble {
    version project.version
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier 'javadoc'
            }
            artifactId 'dynahist'
            groupId = 'com.dynatrace.dynahist'
            version = project.version
            pom {
                name = "${project.group}:${project.name}"
                packaging = 'jar'
                description = 'DynaHist: A Dynamic Histogram Library for Java'
                url = 'https://github.com/dynatrace-oss/dynahist'

                scm {
                    url = 'https://github.com/dynatrace-oss/dynahist.git'
                }

                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'Dynatrace'
                        name = 'Dynatrace LLC'
                        email = 'dynahist@dynatrace.com'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusPublishing {
    packageGroup = "com.dynatrace"
    useStaging = true
    repositories {
        sonatype {
            nexusUrl = uri("https://oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
            username = project.ossrhUsername
            password = project.ossrhPassword
        }
    }
}

githubRelease {
    token project.github_token
    owner 'dynatrace-oss'
    repo 'dynahist'
    tagName 'release-' + project.version
    releaseName 'release-' +  project.version
    body 'https://github.com/dynatrace-oss/dynahist/blob/master/CHANGELOG.md'
    FilenameFilter filter = { dir, filename -> filename.contains(project.version) }
    releaseAssets = jar.destinationDir.listFiles filter
    // overwrite true // uncomment to overwrite the release
}

afterEvaluate {
    tasks.named("publishToSonatype") {
        dependsOn("assemble")
        finalizedBy("githubRelease")
    }
}